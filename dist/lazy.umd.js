(function(n,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(n=typeof globalThis<"u"?globalThis:n||self,i(n.Lazy={}))})(this,function(n){"use strict";function i(t,s){if(!(t.getAttribute("src")&&t.getAttribute("src")===t.getAttribute("data-src")))if(t.getAttribute("data-src").match(/data\:/))t.src=t.getAttribute("data-src"),t.removeAttribute("data-src");else{t.dispatchEvent(new Event("loading"));const r=document.createElement("img");r.src=t.getAttribute("data-src"),r.addEventListener("load",e=>{t.setAttribute("src",r.src),s.value instanceof Function&&s.value(r),t.tagName!=="IMG"&&t.dispatchEvent(new Event(e.type,e))}),t.tagName!=="IMG"&&r.addEventListener("error",e=>{t.dispatchEvent(new Event(e.type,e))})}}const a={beforeMount(t,s,r){const e=new IntersectionObserver(o=>{o.forEach(({isIntersecting:c})=>{c&&(i(t,s),e.disconnect())})});e.observe(t)}};n.Lazy=a,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
